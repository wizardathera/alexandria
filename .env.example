# Alexandria - Environment Variables Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# AI & LLM Configuration
# =============================================================================

# OpenAI API Key (required - primary provider for Phase 1)
OPENAI_API_KEY=your_openai_api_key_here

# AI Model Configuration
# Embedding model: text-embedding-ada-002, text-embedding-3-small, text-embedding-3-large
EMBEDDING_MODEL=text-embedding-ada-002

# LLM model: gpt-3.5-turbo, gpt-4, gpt-4-turbo
LLM_MODEL=gpt-3.5-turbo

# Multi-provider AI Support (Phase 2+)
ANTHROPIC_API_KEY=your_anthropic_api_key_here  # Optional - for Claude models
# LOCAL_MODEL_URL=http://localhost:11434  # For Ollama or similar

# =============================================================================
# Vector Database Configuration
# =============================================================================

# Phase 1: Chroma (local), Phase 2: Supabase (cloud)
VECTOR_DB_TYPE=chroma

# Phase 1: Chroma Configuration (local development)
CHROMA_PERSIST_DIRECTORY=./data/chroma_db
CHROMA_COLLECTION_NAME=alexandria_books

# Phase 2: Supabase Configuration (production migration)
SUPABASE_URL=your_supabase_project_url_here
SUPABASE_KEY=your_supabase_anon_key_here

# Supabase Database Configuration (for direct PostgreSQL access)
SUPABASE_DB_HOST=your_supabase_db_host_here
SUPABASE_DB_PORT=5432
SUPABASE_DB_NAME=postgres
SUPABASE_DB_USER=postgres
SUPABASE_DB_PASSWORD=your_supabase_db_password_here

# =============================================================================
# Application Configuration
# =============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# Debug mode (true/false)
DEBUG=true

# Logging level: debug, info, warning, error, critical
LOG_LEVEL=info

# Phase 1: Single-user, Phase 2: Multi-user with authentication
AUTH_ENABLED=false

# Application host and port
HOST=localhost
PORT=8000

# Streamlit frontend port (Phase 1)
STREAMLIT_PORT=8501

# =============================================================================
# MCP Server Configuration
# =============================================================================

# MCP Server settings
MCP_SERVER_PORT=8080
MCP_SERVER_HOST=localhost
MCP_SERVER_NAME=alexandria-mcp-server

# =============================================================================
# Database Configuration (if using SQL database for user data)
# =============================================================================

# Database URL (SQLite for development, PostgreSQL for production)
DATABASE_URL=sqlite:///./data/alexandria.db
# For PostgreSQL: postgresql://username:password@localhost:5432/alexandria_db

# =============================================================================
# File Storage Configuration
# =============================================================================

# Directory for uploaded books and documents
BOOKS_STORAGE_PATH=./data/books

# Directory for user notes and progress data
USER_DATA_PATH=./data/users

# Maximum file upload size (in MB)
MAX_UPLOAD_SIZE_MB=50

# Supported file formats (comma-separated)
SUPPORTED_FORMATS=pdf,epub,doc,docx,txt,html

# =============================================================================
# Security Configuration
# =============================================================================

# Secret key for session management (generate a random string)
SECRET_KEY=your_super_secret_key_here_change_this_in_production

# CORS origins (comma-separated list)
CORS_ORIGINS=http://localhost:3000,http://localhost:8501

# =============================================================================
# External APIs (Optional)
# =============================================================================

# Project Gutenberg API (if integrating with free books)
# GUTENBERG_API_BASE=https://www.gutenberg.org/ebooks/

# Goodreads API (if integrating book metadata)
# GOODREADS_API_KEY=your_goodreads_api_key_here